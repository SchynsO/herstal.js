{"version":3,"sources":["cookieReader.min.js"],"names":["CooMan","read","checkBool","boolean","toLowerCase","cookie","document","d","Date","setTime","getTime","toUTCString","cookies","split","i","length","couple","value","option","type","charAt","data","substring","parseFloat","btn","parseInt","isMouse","options"],"mappings":"AAAA,GAAIA,QAASA,UAEbA,QAAOC,KAAO,WAEb,GAAIC,GAAY,SAASC,GACxB,OAAOA,EAAQC,eACd,IAAK,QAAS,IAAK,KAAM,IAAK,IAAK,IAAK,GAAI,OAAO,CACnD,SAAS,OAAO,IAGdC,EAASC,SAASD,MACtB,KAAIA,EAAO,CACV,GAAIE,GAAI,GAAIC,KAETD,GAAEE,QAAQF,EAAEG,UAAY,QAG3BL,EAAS,WAAWE,EAAEI,cACxB,wfACEL,SAASD,OAASA,EAInB,IAAI,GADAO,GAAUP,EAAOQ,MAAM,KACnBC,EAAE,EAAGA,EAAEF,EAAQG,OAAQD,IAAI,CAElC,GAAIE,GAASJ,EAAQE,GAAGD,MAAM,IAE9B,IAAqB,GAAjBG,EAAOD,OAAa,CAEvB,GAIIE,GAJAC,EAASF,EAAO,GAChBG,EAASH,EAAO,GAAGI,OAAO,GAC1BC,EAASL,EAAO,GAAGM,UAAU,EAGjC,QAAOH,GACN,IAAK,IAAKF,EAAQf,EAAUmB,EAAO,MACnC,KAAK,IAAKJ,EAAQM,WAAWF,EAAO,MACpC,KAAK,IAAKJ,EAAQI,CAAM,MACxB,KAAK,IAAKJ,GAAUO,IAAKC,SAASJ,GAAS,MAC3C,KAAK,IAAKJ,GAAUO,IAAKC,SAASJ,GAAOK,SAAS,GAGnD1B,OAAO2B,QAAQT,GAAUD,GAG3B,MAAOjB,QAAO2B,SAGf3B,OAAOC","file":"cookieReader.min.js","sourcesContent":["var CooMan = CooMan || {};\r\n\r\nCooMan.read = function(){\r\n\t// convert a string into a boolean value\r\n\tvar checkBool = function(boolean){\r\n\t\tswitch(boolean.toLowerCase()) {\r\n\t\t\tcase \"false\": case \"no\": case \"0\": case \"\": return false;\r\n\t\t\tdefault: return true;\r\n\t\t}\r\n\t};\r\n\tvar cookie = document.cookie;\r\n\tif(!cookie){ // if the cookie is null\r\n\t\tvar d = new Date();\r\n\t\t// the cookie should last for two month\r\n\t    d.setTime(d.getTime() + ( 60 *24*60*60*1000));\r\n\t\t// we init with default values\r\n\t\t// a single string takes far less space once minified\r\n\t\tcookie = \"expires=\"+d.toUTCString()+\r\n\";name=Snoname;model=N0;colorAlpha=S#0000FF;colorBeta=S#FF0000;colorOwn1=S#00FF00;colorOwn2=S#FFFFFF;colorLaser=S#FFFF00;isFullscreen=Bfalse;displayX=N1280;displayY=N720;volumeMaster=N50;volumeEffect=N50;volumeMusic=N50;mouseS=N50;invertX=Bfalse;invertY=Bfalse;moveF=K87;moveB=K83;moveL=K65;moveR=K68;jump=K32;crounch=K16;fire1=M0;fire2=M2;use=K69;reload=K82;melee=K81;zoom=M1;prevWeap=M-1;nextWeap=M-2;weap1=K49;weap2=K50;weap3=K51;weap4=K52;weap5=K53;weap6=K54;weap7=K55;weap8=K56;weap9=K57;weap0=K48\";\r\n\t\tdocument.cookie = cookie;\r\n\t}\r\n\t// for each cookie we've defined\r\n\tvar cookies = cookie.split(\";\");\r\n\tfor(var i=0; i<cookies.length; i++){\r\n\t\t// we recover a couple ( key, value )\r\n\t\tvar couple = cookies[i].split(\"=\");\r\n\t\t// as long as we have two elements\r\n\t\tif( couple.length == 2 ){\r\n\t\t\t// we analyze the cookie\r\n\t\t\tvar option = couple[0]; // option name\r\n\t\t\tvar type   = couple[1].charAt(0);    // value type\r\n\t\t\tvar data   = couple[1].substring(1); // the value of the option\r\n\t\t\t// we recover the value for the given data\r\n\t\t\tvar value; // default value is null\r\n\t\t\tswitch(type){\r\n\t\t\t\tcase \"B\": value = checkBool(data); break; // boolean\r\n\t\t\t\tcase \"N\": value = parseFloat(data); break; // number\r\n\t\t\t\tcase \"S\": value = data; break; // string\r\n\t\t\t\tcase \"K\": value = { btn: parseInt(data) }; break; // key input\r\n\t\t\t\tcase \"M\": value = { btn: parseInt(data), isMouse: true }; break; // mouse input\r\n\t\t\t}\r\n\t\t\t// we set the option value if option is not null\r\n\t\t\tCooMan.options[option] = value;\r\n\t\t}\r\n\t}\r\n\treturn CooMan.options;\r\n};\r\n// we want to try to load the configuration stored in the cookie\r\nCooMan.read();\r\n"],"sourceRoot":"/source/"}